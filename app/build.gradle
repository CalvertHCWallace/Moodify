plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

android {
    namespace 'ca.calvert.moodify'
    compileSdk 33

    defaultConfig {
        applicationId "ca.calvert.moodify"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
        compose true
    }


    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.6"
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Import the Firebase Bill of Materials (BoM).
    // BoM is a special type of POM that controls the versions of a project's dependencies and makes
    // applications use the same versions of Firebase components.
    implementation platform('com.google.firebase:firebase-bom:32.1.1')

    // When using the BoM, you don't need to specify versions in Firebase dependencies

    // The Firebase Analytics library is implemented here. Firebase Analytics helps you understand how
    // people use your Android application and you can use that understanding to drive marketing strategies.
    implementation 'com.google.firebase:firebase-analytics'

    // Firebase Authentication library is used for authenticating users through various methods -
    // email/password, phone, Google, etc. In this app, we're using it for user registration and login.
    implementation 'com.google.firebase:firebase-auth'

    // Firestore is a flexible, scalable database for mobile, web, and server development. It keeps
    // your data in sync across apps through realtime listeners and offers offline support for mobile
    // and web applications.
    implementation 'com.google.firebase:firebase-firestore'

    // Firebase Storage is used for storing files such as images, videos, etc. Here it's implemented
    // for storing and retrieving the images used in the mood boards.
    implementation 'com.google.firebase:firebase-storage'

    // Define dependency constraints for the Kotlin standard library.
    // These constraints are included to ensure that the appropriate Kotlin standard library
    // is used for the version of Kotlin in use by your project.
    constraints {
        // This dependency is for Kotlin standard library for Java 7.
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        // This dependency is for Kotlin standard library for Java 8.
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    // The Compose BOM ensures that all dependencies that are used in conjunction with Compose use
    // the same version. This prevents version conflicts between the various libraries.
    def composeBom = platform('androidx.compose:compose-bom:2023.05.01')
    implementation composeBom
    androidTestImplementation composeBom

    // Implementation of Material Design 3 with Jetpack Compose. This is for the UI layer of the app.
    implementation 'androidx.compose.material3:material3'
    // This library provides Activity helpers for Jetpack Compose. It's used to support Compose in
    // your Activities.
    implementation 'androidx.activity:activity-compose:1.7.2'
    // This dependency provides ViewModel helpers for Jetpack Compose, and is used to handle lifecycle-aware
    // data management tasks and share data between different composable functions.
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // This is the Jetpack Compose runtime livedata library. It provides LiveData support for Compose.
    implementation 'androidx.compose.runtime:runtime-livedata'

    // Picasso is a powerful image downloading and caching library for Android. It simplifies the
    // process of displaying images from external sources in your application.
    implementation 'com.squareup.picasso:picasso:2.71828'
    // Volley is a library that makes networking for Android apps easier and most importantly, faster.
    // It manages the processing and caching of network requests and it saves developers valuable time
    // from writing the same networking boilerplate code again and again.
    implementation 'com.android.volley:volley:1.2.1'
}